import threading
import time
import random

BUFFER_SIZE = 5

buffer = []
mutex = threading.Lock()
full = threading.Semaphore(0)
empty = threading.Semaphore(BUFFER_SIZE)

def producer():
    while True:
        item = random.randint(1, 100)
        empty.acquire()
        mutex.acquire()
        buffer.append(item)
        print("Produced:", item)
        mutex.release()
        full.release()
        time.sleep(1)

def consumer():
    while True:
        full.acquire()
        mutex.acquire()
        item = buffer.pop(0)
        print("Consumed:", item)
        mutex.release()
        empty.release()
        time.sleep(2)

producer_thread = threading.Thread(target=producer)
consumer_thread = threading.Thread(target=consumer)

producer_thread.start()
consumer_thread.start()

producer_thread.join()
consumer_thread.join()
